{"ast":null,"code":"var _jsxFileName = \"/Users/bishowgurung/recipe-finder/githubClient/src/scenes/ingredientPage/index.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setIngredients, setSelectedIngredient } from \"state\";\nimport { Box } from \"@mui/material\";\nimport Image from \"components/ImageWrapper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Ingredients = _ref => {\n  _s();\n  let {\n    ingredientN,\n    size = '60%',\n    title\n  } = _ref;\n  const dispatch = useDispatch();\n  const ingredient = useSelector(state => state.ingredients);\n  const getIngredient = async ingredientName => {\n    const sanitizedIngredientName = ingredientName.replace(/\"/g, '');\n    const response = await fetch(`http://localhost:3001/recipes/ingredient/${sanitizedIngredientName}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        ingredientName: sanitizedIngredientName\n      })\n    });\n    const data = await response.json();\n    dispatch(setIngredients({\n      ingredients: data\n    }));\n  };\n  if (ingredient == null) {\n    console.log(ingredientN);\n    getIngredient(ingredientN);\n  }\n  useEffect(() => {\n    getIngredient(ingredientN);\n    // getIngredient(JSON.stringify(ingredientN.ingredientN));\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Image, {\n        image: ingredient.imagePath,\n        width: size,\n        height: size,\n        title: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, ingredient._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Ingredients, \"e5uKWyV1veM5IXu6Z+dfxS70vmM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Ingredients;\nexport default Ingredients;\nvar _c;\n$RefreshReg$(_c, \"Ingredients\");","map":{"version":3,"names":["useEffect","useDispatch","useSelector","setIngredients","setSelectedIngredient","Box","Image","Ingredients","ingredientN","size","title","dispatch","ingredient","state","ingredients","getIngredient","ingredientName","sanitizedIngredientName","replace","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","imagePath","_id"],"sources":["/Users/bishowgurung/recipe-finder/githubClient/src/scenes/ingredientPage/index.jsx"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setIngredients, setSelectedIngredient } from \"state\";\r\nimport { Box } from \"@mui/material\";\r\nimport Image from \"components/ImageWrapper\";\r\n\r\nconst Ingredients = ({ ingredientN, size='60%' ,title}) => {\r\n  const dispatch = useDispatch();\r\n  const ingredient = useSelector((state) => state.ingredients);\r\n\r\n  const getIngredient = async ( ingredientName ) => {\r\n    const sanitizedIngredientName = ingredientName.replace(/\"/g, '');\r\n    const response = await fetch(`http://localhost:3001/recipes/ingredient/${sanitizedIngredientName}`, {\r\n      method: \"POST\",\r\n      headers:{\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ingredientName: sanitizedIngredientName}),\r\n    });\r\n    const data = await response.json();\r\n    dispatch(setIngredients({ingredients: data}));\r\n  };\r\n\r\n\r\n  if(ingredient == null){\r\n    console.log(ingredientN)\r\n    getIngredient(ingredientN);\r\n  }\r\n\r\n    useEffect(() => {\r\n        getIngredient(ingredientN);\r\n      // getIngredient(JSON.stringify(ingredientN.ingredientN));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <>\r\n      <Box key= {ingredient._id}  display= \"flex\" justifyContent= \"center\">\r\n        <Image image={ingredient.imagePath} width={size} height={size} title={title}/>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Ingredients;\r\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,cAAc,EAAEC,qBAAqB,QAAQ,OAAO;AAC7D,SAASC,GAAG,QAAQ,eAAe;AACnC,OAAOC,KAAK,MAAM,yBAAyB;AAAC;AAAA;AAE5C,MAAMC,WAAW,GAAG,QAAuC;EAAA;EAAA,IAAtC;IAAEC,WAAW;IAAEC,IAAI,GAAC,KAAK;IAAEC;EAAK,CAAC;EACpD,MAAMC,QAAQ,GAAGV,WAAW,EAAE;EAC9B,MAAMW,UAAU,GAAGV,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACC,WAAW,CAAC;EAE5D,MAAMC,aAAa,GAAG,MAAQC,cAAc,IAAM;IAChD,MAAMC,uBAAuB,GAAGD,cAAc,CAACE,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;IAChE,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,4CAA2CH,uBAAwB,EAAC,EAAE;MAClGI,MAAM,EAAE,MAAM;MACdC,OAAO,EAAC;QACN,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACT,cAAc,EAAEC;MAAuB,CAAC;IAChE,CAAC,CAAC;IACF,MAAMS,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,EAAE;IAClChB,QAAQ,CAACR,cAAc,CAAC;MAACW,WAAW,EAAEY;IAAI,CAAC,CAAC,CAAC;EAC/C,CAAC;EAGD,IAAGd,UAAU,IAAI,IAAI,EAAC;IACpBgB,OAAO,CAACC,GAAG,CAACrB,WAAW,CAAC;IACxBO,aAAa,CAACP,WAAW,CAAC;EAC5B;EAEER,SAAS,CAAC,MAAM;IACZe,aAAa,CAACP,WAAW,CAAC;IAC5B;EACF,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAEV,oBACE;IAAA,uBACE,QAAC,GAAG;MAAwB,OAAO,EAAE,MAAM;MAAC,cAAc,EAAE,QAAQ;MAAA,uBAClE,QAAC,KAAK;QAAC,KAAK,EAAEI,UAAU,CAACkB,SAAU;QAAC,KAAK,EAAErB,IAAK;QAAC,MAAM,EAAEA,IAAK;QAAC,KAAK,EAAEC;MAAM;QAAA;QAAA;QAAA;MAAA;IAAE,GADrEE,UAAU,CAACmB,GAAG;MAAA;MAAA;MAAA;IAAA;EAEnB,iBACL;AAEP,CAAC;AAAC,GAnCIxB,WAAW;EAAA,QACEN,WAAW,EACTC,WAAW;AAAA;AAAA,KAF1BK,WAAW;AAqCjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}
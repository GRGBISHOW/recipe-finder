{"ast":null,"code":"var _jsxFileName = \"/Users/bishowgurung/recipe-finder/client/src/scenes/ingredientPage/index.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setIngredients } from \"state\";\nimport { Box } from \"@mui/material\";\nimport Image from \"components/ImageWrapper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Ingredients = _ref => {\n  _s();\n  let {\n    ingredientN,\n    size = '60%',\n    title\n  } = _ref;\n  const dispatch = useDispatch();\n  const ingredient = useSelector(state => state.ingredients);\n\n  // const getIngredient = async ( ingredientName ) => {\n  //   const sanitizedIngredientName = ingredientName.replace(/\"/g, '');\n  //   const response = await fetch(`http://localhost:3001/recipes/ingredient/${sanitizedIngredientName}`, {\n  //     method: \"POST\",\n  //     headers:{\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify({ingredientName: sanitizedIngredientName}),\n  //   });\n  //   const data = await response.json();\n  //   dispatch(setIngredients({ingredients: data}));\n  // };\n\n  const getAllIngredients = async () => {\n    const response = await fetch(`https://onlygunicorn.xyz/recipes/getAllIngredients`, {\n      method: \"GET\"\n    });\n    const data = await response.json();\n    dispatch(setIngredients({\n      ingredients: data\n    }));\n  };\n  const titleStyle = {\n    marginTop: '20px',\n    color: 'var(--Dark-green, #105B27)',\n    textAlign: 'center',\n    fontFamily: 'Quicksand',\n    fontSize: '42px',\n    fontStyle: 'normal',\n    fontWeight: '700',\n    lineHeight: '28.069px; /* 77.968% *',\n    letterSpacing: '1.053px'\n  };\n  useEffect(() => {\n    // getIngredient(ingredientN);\n    // getAllIngredients();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  let currentIngredient = ingredient[0];\n  for (const ii in ingredient) {\n    const sanitizedIngredientName = ingredientN.replace(/\"/g, '');\n    if (ingredient[ii].name === sanitizedIngredientName) {\n      currentIngredient = ingredient[ii];\n      break;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        style: {\n          borderRadius: \"5%\"\n        },\n        src: `https://onlygunicorn.xyz/backend/assets/${currentIngredient.imagePath}`,\n        width: size,\n        height: size\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        style: titleStyle,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, currentIngredient._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Ingredients, \"e5uKWyV1veM5IXu6Z+dfxS70vmM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Ingredients;\nexport default Ingredients;\nvar _c;\n$RefreshReg$(_c, \"Ingredients\");","map":{"version":3,"names":["useEffect","useDispatch","useSelector","setIngredients","Box","Image","Ingredients","ingredientN","size","title","dispatch","ingredient","state","ingredients","getAllIngredients","response","fetch","method","data","json","titleStyle","marginTop","color","textAlign","fontFamily","fontSize","fontStyle","fontWeight","lineHeight","letterSpacing","currentIngredient","ii","sanitizedIngredientName","replace","name","borderRadius","imagePath","_id"],"sources":["/Users/bishowgurung/recipe-finder/client/src/scenes/ingredientPage/index.jsx"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setIngredients } from \"state\";\r\nimport { Box } from \"@mui/material\";\r\nimport Image from \"components/ImageWrapper\";\r\n\r\nconst Ingredients = ({ ingredientN, size='60%' ,title}) => {\r\n  const dispatch = useDispatch();\r\n  const ingredient = useSelector((state) => state.ingredients);\r\n\r\n  // const getIngredient = async ( ingredientName ) => {\r\n  //   const sanitizedIngredientName = ingredientName.replace(/\"/g, '');\r\n  //   const response = await fetch(`http://localhost:3001/recipes/ingredient/${sanitizedIngredientName}`, {\r\n  //     method: \"POST\",\r\n  //     headers:{\r\n  //       \"Content-Type\": \"application/json\",\r\n  //     },\r\n  //     body: JSON.stringify({ingredientName: sanitizedIngredientName}),\r\n  //   });\r\n  //   const data = await response.json();\r\n  //   dispatch(setIngredients({ingredients: data}));\r\n  // };\r\n\r\n  const getAllIngredients = async () => {\r\n    const response = await fetch(`https://onlygunicorn.xyz/recipes/getAllIngredients`, {\r\n      method: \"GET\",\r\n    });\r\n    const data = await response.json();\r\n    dispatch(setIngredients({ingredients: data}));\r\n  };\r\n\r\n\r\n  const titleStyle = {\r\n    marginTop:'20px',\r\n    color: 'var(--Dark-green, #105B27)',\r\n    textAlign: 'center',\r\n    fontFamily: 'Quicksand',\r\n    fontSize: '42px',\r\n    fontStyle: 'normal',\r\n    fontWeight: '700',\r\n    lineHeight: '28.069px; /* 77.968% *',\r\n    letterSpacing: '1.053px',\r\n  };\r\n\r\n\r\n    useEffect(() => {\r\n        // getIngredient(ingredientN);\r\n        // getAllIngredients();\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    let currentIngredient = ingredient[0];\r\n\r\n\r\n    for(const ii in ingredient){\r\n      const sanitizedIngredientName = ingredientN.replace(/\"/g, '');\r\n      if(ingredient[ii].name === sanitizedIngredientName){\r\n        currentIngredient = ingredient[ii];\r\n        break;\r\n      }\r\n    }\r\n\r\n  return (\r\n    <>\r\n      <Box key= {currentIngredient._id}  display= \"flex\" flexDirection='column' justifyContent=\"center\">\r\n        <img style={{ borderRadius: \"5%\",}} src={`https://onlygunicorn.xyz/backend/assets/${currentIngredient.imagePath}`} width={size} height={size}/>\r\n        <Box style={titleStyle}>{title}</Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Ingredients;\r\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,cAAc,QAAQ,OAAO;AACtC,SAASC,GAAG,QAAQ,eAAe;AACnC,OAAOC,KAAK,MAAM,yBAAyB;AAAC;AAAA;AAE5C,MAAMC,WAAW,GAAG,QAAuC;EAAA;EAAA,IAAtC;IAAEC,WAAW;IAAEC,IAAI,GAAC,KAAK;IAAEC;EAAK,CAAC;EACpD,MAAMC,QAAQ,GAAGT,WAAW,EAAE;EAC9B,MAAMU,UAAU,GAAGT,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACC,WAAW,CAAC;;EAE5D;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,iBAAiB,GAAG,YAAY;IACpC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,oDAAmD,EAAE;MACjFC,MAAM,EAAE;IACV,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,EAAE;IAClCT,QAAQ,CAACP,cAAc,CAAC;MAACU,WAAW,EAAEK;IAAI,CAAC,CAAC,CAAC;EAC/C,CAAC;EAGD,MAAME,UAAU,GAAG;IACjBC,SAAS,EAAC,MAAM;IAChBC,KAAK,EAAE,4BAA4B;IACnCC,SAAS,EAAE,QAAQ;IACnBC,UAAU,EAAE,WAAW;IACvBC,QAAQ,EAAE,MAAM;IAChBC,SAAS,EAAE,QAAQ;IACnBC,UAAU,EAAE,KAAK;IACjBC,UAAU,EAAE,wBAAwB;IACpCC,aAAa,EAAE;EACjB,CAAC;EAGC7B,SAAS,CAAC,MAAM;IACZ;IACA;EACJ,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,IAAI8B,iBAAiB,GAAGnB,UAAU,CAAC,CAAC,CAAC;EAGrC,KAAI,MAAMoB,EAAE,IAAIpB,UAAU,EAAC;IACzB,MAAMqB,uBAAuB,GAAGzB,WAAW,CAAC0B,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;IAC7D,IAAGtB,UAAU,CAACoB,EAAE,CAAC,CAACG,IAAI,KAAKF,uBAAuB,EAAC;MACjDF,iBAAiB,GAAGnB,UAAU,CAACoB,EAAE,CAAC;MAClC;IACF;EACF;EAEF,oBACE;IAAA,uBACE,QAAC,GAAG;MAA+B,OAAO,EAAE,MAAM;MAAC,aAAa,EAAC,QAAQ;MAAC,cAAc,EAAC,QAAQ;MAAA,wBAC/F;QAAK,KAAK,EAAE;UAAEI,YAAY,EAAE;QAAK,CAAE;QAAC,GAAG,EAAG,2CAA0CL,iBAAiB,CAACM,SAAU,EAAE;QAAC,KAAK,EAAE5B,IAAK;QAAC,MAAM,EAAEA;MAAK;QAAA;QAAA;QAAA;MAAA,QAAE,eAC/I,QAAC,GAAG;QAAC,KAAK,EAAEY,UAAW;QAAA,UAAEX;MAAK;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA,GAF5BqB,iBAAiB,CAACO,GAAG;MAAA;MAAA;MAAA;IAAA;EAG1B,iBACL;AAEP,CAAC;AAAC,GA/DI/B,WAAW;EAAA,QACEL,WAAW,EACTC,WAAW;AAAA;AAAA,KAF1BI,WAAW;AAiEjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}
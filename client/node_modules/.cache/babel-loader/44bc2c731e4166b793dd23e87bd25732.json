{"ast":null,"code":"var _jsxFileName = \"/Users/bishowgurung/recipe-finder/client/src/scenes/loginPage/Form.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Box, Button, TextField, useMediaQuery, Typography } from \"@mui/material\";\nimport EditOutlinedIcon from \"@mui/icons-material/EditOutlined\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { setLogin, setLikes } from \"state\";\nimport Dropzone from \"react-dropzone\";\nimport Flex from \"components/Flex\";\nimport { purple, orange, red, grey } from \"@mui/material/colors\";\nimport { setIngredients, setCategories, setRecipes } from \"state\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst registerSchema = yup.object().shape({\n  firstName: yup.string().required(\"required\"),\n  lastName: yup.string().required(\"required\"),\n  email: yup.string().email(\"invalid email\").required(\"required\"),\n  password: yup.string().required(\"required\"),\n  imagePath: yup.string().required(\"required\")\n});\nconst loginSchema = yup.object().shape({\n  email: yup.string().email(\"invalid email\").required(\"required\"),\n  password: yup.string().required(\"required\")\n});\nconst initialValuesRegister = {\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  password: \"\",\n  imagePath: \"\"\n};\nconst initialValuesLogin = {\n  email: \"\",\n  password: \"\"\n};\nconst Form = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [pageType, setPageType] = useState(\"login\");\n  const navigate = useNavigate();\n  const isNonMobile = useMediaQuery(\"(min-width:600px)\");\n  const isLogin = pageType === \"login\";\n  const isRegister = pageType === \"register\";\n  const getAllIngredients = async () => {\n    const response = await fetch(`https://onlygunicorn.xyz/backend/recipes/getAllIngredients`, {\n      method: \"GET\"\n    });\n    const data = await response.json();\n    dispatch(setIngredients({\n      ingredients: data\n    }));\n  };\n  const getAllCategories = async () => {\n    const response = await fetch(`https://onlygunicorn.xyz/backend/category/`, {\n      method: 'GET'\n    });\n    const data = await response.json();\n    dispatch(setCategories({\n      categories: data\n    }));\n  };\n  const register = async (values, onSubmitProps) => {\n    // this allows us to send form info with image\n    const formData = new FormData();\n    for (let value in values) {\n      formData.append(value, values[value]);\n    }\n    formData.append(\"imagePath\", values.imagePath.name);\n    const savedUserResponse = await fetch(\"https://onlygunicorn.xyz/backend/auth/register\", {\n      method: \"POST\",\n      body: formData\n    });\n    const savedUser = await savedUserResponse.json();\n    onSubmitProps.resetForm();\n    if (savedUser) {\n      setPageType(\"login\");\n    }\n  };\n  const getAllRecipes = async () => {\n    const response = await fetch(\"https://onlygunicorn.xyz/backend/recipes/\", {\n      method: \"GET\"\n    });\n    const data = await response.json();\n    dispatch(setRecipes({\n      recipes: data\n    }));\n  };\n  const login = async (values, onSubmitProps) => {\n    const loggedInResponse = await fetch(\"https://onlygunicorn.xyz/backend/auth/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(values)\n    });\n    const loggedIn = await loggedInResponse.json();\n    onSubmitProps.resetForm();\n    if (loggedIn) {\n      await getAllCategories();\n      await getAllIngredients();\n      await getAllRecipes();\n      dispatch(setLogin({\n        user: loggedIn.user,\n        token: loggedIn.token\n      }));\n      dispatch(setLikes({\n        likes: loggedIn.user.likes,\n        user: loggedIn.user,\n        token: loggedIn.token\n      }));\n      navigate(\"/home\");\n    }\n  };\n  const handleFormSubmit = async (values, onSubmitProps) => {\n    if (isLogin) await login(values, onSubmitProps);\n    if (isRegister) await register(values, onSubmitProps);\n  };\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    onSubmit: handleFormSubmit,\n    initialValues: isLogin ? initialValuesLogin : initialValuesRegister,\n    validationSchema: isLogin ? loginSchema : registerSchema,\n    sx: {\n      display: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n      //\"& > div\": { gridColumn: isNonMobile ? undefined : \"span 4\" },\n    },\n    children: _ref => {\n      let {\n        values,\n        errors,\n        touched,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        setFieldValue,\n        resetForm\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        sx: {\n          display: '100%',\n          alignItems: 'center',\n          justifyContent: 'center'\n          //\"& > div\": { gridColumn: isNonMobile ? undefined : \"span 4\" },\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box\n        //display=\"grid\"\n        //gridTemplateColumns=\"repeat(4, minmax(0, 1fr))\"\n        , {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            flexDirection: 'column'\n            //\"& > div\": { gridColumn: isNonMobile ? undefined : \"span 4\" },\n          },\n          children: [isRegister && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              width: '100%',\n              flexDirection: 'column'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                // paddingLeft: '472px',\n                display: 'flex',\n                alignItems: 'center',\n                width: '100%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                label: \"First Name\",\n                onBlur: handleBlur,\n                onChange: handleChange,\n                value: values.firstName,\n                name: \"firstName\",\n                error: Boolean(touched.firstName) && Boolean(errors.firstName),\n                helperText: touched.firstName && errors.firstName,\n                sx: {\n                  marginBottom: '20px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Last Name\",\n                onBlur: handleBlur,\n                onChange: handleChange,\n                value: values.lastName,\n                name: \"lastName\",\n                error: Boolean(touched.lastName) && Boolean(errors.lastName),\n                helperText: touched.lastName && errors.lastName,\n                sx: {\n                  width: '205px',\n                  marginLeft: '18px',\n                  marginBottom: '20px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              width: \"100%\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                gridColumn: \"span 4\",\n                border: `1px solid black`,\n                borderRadius: \"5px\",\n                p: \"1rem\",\n                width: \"395px\",\n                height: \"20px\",\n                position: \"relative\"\n                // left='80px'\n                ,\n                sx: {\n                  marginBottom: '20px'\n                },\n                children: /*#__PURE__*/_jsxDEV(Dropzone, {\n                  acceptedFiles: \".jpg,.jpeg,.png\",\n                  multiple: false,\n                  onDrop: acceptedFiles => setFieldValue(\"imagePath\", acceptedFiles[0]),\n                  children: _ref2 => {\n                    let {\n                      getRootProps,\n                      getInputProps\n                    } = _ref2;\n                    return /*#__PURE__*/_jsxDEV(Box, {\n                      ...getRootProps(),\n                      border: '2px dashed #105B27',\n                      p: \"0.8rem\",\n                      position: \"relative\",\n                      top: \"-3px\",\n                      sx: {\n                        \"&:hover\": {\n                          cursor: \"pointer\"\n                        },\n                        height: '3px'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        ...getInputProps()\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 247,\n                        columnNumber: 25\n                      }, this), !values.imagePath ? /*#__PURE__*/_jsxDEV(Flex, {\n                        position: \"absolute\",\n                        top: \"5px\",\n                        children: \"Add Picture Here\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 249,\n                        columnNumber: 27\n                      }, this) : /*#__PURE__*/_jsxDEV(Flex, {\n                        children: [/*#__PURE__*/_jsxDEV(Typography, {\n                          children: values.imagePath.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 252,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(EditOutlinedIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 253,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 251,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 239,\n                      columnNumber: 23\n                    }, this);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Email\",\n            onBlur: handleBlur,\n            onChange: handleChange,\n            value: values.email,\n            name: \"email\",\n            error: Boolean(touched.email) && Boolean(errors.email),\n            helperText: touched.email && errors.email,\n            sx: {\n              gridColumn: \"span 4\",\n              marginBottom: '20px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Password\",\n            type: \"password\",\n            onBlur: handleBlur,\n            onChange: handleChange,\n            value: values.password,\n            name: \"password\",\n            error: Boolean(touched.password) && Boolean(errors.password),\n            helperText: touched.password && errors.password,\n            sx: {\n              gridColumn: \"span 4\",\n              width: '430px',\n              left: '80px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            flexDirection: 'column'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            type: \"submit\",\n            sx: {\n              m: \"2rem 0\",\n              width: '430px',\n              left: '80px',\n              p: \"1rem\",\n              backgroundColor: '#F2994A',\n              \"&:hover\": {\n                backgroundColor: '#105B27'\n              },\n              color: '#FFF',\n              textAlign: 'center',\n              fontFamily: 'Quicksand',\n              textTransform: 'none',\n              fontSize: '22px',\n              fontWeight: '600',\n              lineHeight: '20.94px',\n              /* 174.811% */\n              letterSpacing: '-0.274px'\n            },\n            children: isLogin ? \"Log in\" : \"Register Now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            onClick: () => {\n              setPageType(isLogin ? \"register\" : \"login\");\n              resetForm();\n            },\n            sx: {\n              marginLeft: '80px',\n              color: '#20B64D',\n              \"&:hover\": {\n                cursor: \"pointer\",\n                color: '#105B27'\n              }\n            },\n            children: isLogin ? \"Don't have an account? Sign Up here.\" : \"Already have an account? Login here.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"jdVwisp6MUdrHSaNAuUjN+dVxZY=\", false, function () {\n  return [useDispatch, useNavigate, useMediaQuery];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","Box","Button","TextField","useMediaQuery","Typography","EditOutlinedIcon","Formik","yup","useNavigate","useDispatch","setLogin","setLikes","Dropzone","Flex","purple","orange","red","grey","setIngredients","setCategories","setRecipes","registerSchema","object","shape","firstName","string","required","lastName","email","password","imagePath","loginSchema","initialValuesRegister","initialValuesLogin","Form","dispatch","pageType","setPageType","navigate","isNonMobile","isLogin","isRegister","getAllIngredients","response","fetch","method","data","json","ingredients","getAllCategories","categories","register","values","onSubmitProps","formData","FormData","value","append","name","savedUserResponse","body","savedUser","resetForm","getAllRecipes","recipes","login","loggedInResponse","headers","JSON","stringify","loggedIn","user","token","likes","handleFormSubmit","display","alignItems","justifyContent","errors","touched","handleBlur","handleChange","handleSubmit","setFieldValue","flexDirection","width","Boolean","marginBottom","marginLeft","acceptedFiles","getRootProps","getInputProps","cursor","height","gridColumn","left","m","p","backgroundColor","color","textAlign","fontFamily","textTransform","fontSize","fontWeight","lineHeight","letterSpacing"],"sources":["/Users/bishowgurung/recipe-finder/client/src/scenes/loginPage/Form.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport {\n  Box,\n  Button,\n  TextField,\n  useMediaQuery,\n  Typography,\n} from \"@mui/material\";\nimport EditOutlinedIcon from \"@mui/icons-material/EditOutlined\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { setLogin, setLikes } from \"state\";\nimport Dropzone from \"react-dropzone\";\nimport Flex from \"components/Flex\";\nimport { purple, orange, red, grey } from \"@mui/material/colors\"\nimport { setIngredients, setCategories, setRecipes} from \"state\";\n\n\nconst registerSchema = yup.object().shape({\n  firstName: yup.string().required(\"required\"),\n  lastName: yup.string().required(\"required\"),\n  email: yup.string().email(\"invalid email\").required(\"required\"),\n  password: yup.string().required(\"required\"),\n  imagePath: yup.string().required(\"required\"),\n});\n\nconst loginSchema = yup.object().shape({\n  email: yup.string().email(\"invalid email\").required(\"required\"),\n  password: yup.string().required(\"required\"),\n});\n\n\nconst initialValuesRegister = {\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  password: \"\",\n  imagePath: \"\",\n};\n\nconst initialValuesLogin = {\n  email: \"\",\n  password: \"\",\n};\n\nconst Form = () => {\n  const dispatch = useDispatch();\n  const [pageType, setPageType] = useState(\"login\");\n  const navigate = useNavigate();\n  const isNonMobile = useMediaQuery(\"(min-width:600px)\");\n  const isLogin = pageType === \"login\";\n  const isRegister = pageType === \"register\";\n\n\n  const getAllIngredients = async () => {\n    const response = await fetch(`https://onlygunicorn.xyz/backend/recipes/getAllIngredients`, {\n      method: \"GET\",\n    });\n    const data = await response.json();\n    dispatch(setIngredients({ingredients: data}));\n  };\n  \n  const getAllCategories = async() => {\n    const response = await fetch(`https://onlygunicorn.xyz/backend/category/`,{\n      method: 'GET'\n    });\n    const data = await response.json();\n    dispatch(setCategories({categories : data}));\n  }; \n\n  const register = async (values, onSubmitProps) => {\n    // this allows us to send form info with image\n    const formData = new FormData();\n    for (let value in values) {\n      formData.append(value, values[value]);\n    }\n    formData.append(\"imagePath\", values.imagePath.name);\n\n    const savedUserResponse = await fetch(\n      \"https://onlygunicorn.xyz/backend/auth/register\",\n      {\n        method: \"POST\",\n        body: formData,\n      }\n    );\n    const savedUser = await savedUserResponse.json();\n    onSubmitProps.resetForm();\n\n    if (savedUser) {\n      setPageType(\"login\");\n    }\n  };\n  const getAllRecipes = async () => {\n    const response = await fetch(\"https://onlygunicorn.xyz/backend/recipes/\", {\n      method: \"GET\",\n    });\n    const data = await response.json();\n    dispatch(setRecipes({ recipes: data }));\n  };\n\n  const login = async (values, onSubmitProps) => {\n    const loggedInResponse = await fetch(\"https://onlygunicorn.xyz/backend/auth/login\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(values),\n    });\n    const loggedIn = await loggedInResponse.json();\n    onSubmitProps.resetForm();\n    if (loggedIn) {\n      await getAllCategories();\n      await getAllIngredients();\n      await getAllRecipes();\n      dispatch(\n        setLogin({\n          user: loggedIn.user,\n          token: loggedIn.token,\n        }));\n      dispatch(\n        setLikes({ \n          likes: loggedIn.user.likes,\n          user: loggedIn.user,\n          token: loggedIn.token,\n         }));\n      navigate(\"/home\");\n    }\n  };\n\n  const handleFormSubmit = async (values, onSubmitProps) => {\n    if (isLogin) await login(values, onSubmitProps);\n    if (isRegister) await register(values, onSubmitProps);\n  };\n\n  return (\n    <Formik\n      onSubmit={handleFormSubmit}\n      initialValues={isLogin ? initialValuesLogin : initialValuesRegister}\n      validationSchema={isLogin ? loginSchema : registerSchema}\n      sx={{\n        display: '100%',\n        alignItems: 'center',\n        justifyContent: 'center',\n        //\"& > div\": { gridColumn: isNonMobile ? undefined : \"span 4\" },\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        setFieldValue,\n        resetForm,\n       }) => (\n        <form onSubmit={handleSubmit}\n        sx={{\n          display: '100%',\n          alignItems: 'center',\n          justifyContent: 'center',\n          //\"& > div\": { gridColumn: isNonMobile ? undefined : \"span 4\" },\n        }}>\n          <Box\n            //display=\"grid\"\n            //gridTemplateColumns=\"repeat(4, minmax(0, 1fr))\"\n            sx={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              flexDirection:'column',\n              //\"& > div\": { gridColumn: isNonMobile ? undefined : \"span 4\" },\n            }}\n          >\n            {isRegister && (\n              <Box sx={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                width: '100%',\n                flexDirection: 'column',\n              }}>\n              <Box\n                sx={{\n                  // paddingLeft: '472px',\n                  display: 'flex',\n                  alignItems: 'center',\n                  width: '100%',\n                }}\n              >\n              <TextField\n                  label=\"First Name\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.firstName}\n                  name=\"firstName\"\n                  error={\n                    Boolean(touched.firstName) && Boolean(errors.firstName)\n                  }\n                  helperText={touched.firstName && errors.firstName}\n                  sx={{ marginBottom:'20px'}}\n                />\n                <TextField\n                  label=\"Last Name\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.lastName}\n                  name=\"lastName\"\n                  error={Boolean(touched.lastName) && Boolean(errors.lastName)}\n                  helperText={touched.lastName && errors.lastName}\n                  sx={{ width: '205px', marginLeft: '18px', marginBottom:'20px'}}\n                />\n              </Box>\n              <Box\n                width='100%'\n                display='flex'\n                alignItems ='center'\n                justifyContent= 'center'\n              >\n                <Box\n                  gridColumn=\"span 4\"\n                  border={`1px solid black`}\n                  borderRadius=\"5px\"\n                  p=\"1rem\"\n                  width='395px'\n                  height= '20px'\n                  position='relative'\n                  // left='80px'\n                  sx={{marginBottom:'20px'}}\n                >\n                  <Dropzone\n                    acceptedFiles=\".jpg,.jpeg,.png\"\n                    multiple={false}\n                    onDrop={(acceptedFiles) =>\n                      setFieldValue(\"imagePath\", acceptedFiles[0])\n                    }\n                  >\n                    {({ getRootProps, getInputProps }) => (\n                      <Box\n                        {...getRootProps()}\n                        border={'2px dashed #105B27'}\n                        p=\"0.8rem\"\n                        position='relative'\n                        top='-3px'\n                        sx={{ \"&:hover\": { cursor: \"pointer\" }, height: '3px',  }}\n                      >\n                        <input {...getInputProps()} />\n                        {!values.imagePath ? (\n                          <Flex position='absolute' top='5px'>Add Picture Here</Flex>\n                        ) : (\n                          <Flex>\n                            <Typography>{values.imagePath.name}</Typography>\n                            <EditOutlinedIcon />\n                          </Flex>\n                        )}\n                      </Box>\n                    )}\n                  </Dropzone>\n                </Box>\n                </Box>\n              </Box>\n            )}\n\n            <TextField\n              label=\"Email\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              value={values.email}\n              name=\"email\"\n              error={Boolean(touched.email) && Boolean(errors.email)}\n              helperText={touched.email && errors.email}\n              sx={{ gridColumn: \"span 4\" ,  marginBottom:'20px' }}\n            />\n            <TextField\n              label=\"Password\"\n              type=\"password\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              value={values.password}\n              name=\"password\"\n              error={Boolean(touched.password) && Boolean(errors.password)}\n              helperText={touched.password && errors.password}\n              sx={{ gridColumn: \"span 4\", width: '430px', left: '80px' }}\n            />\n          </Box>\n\n          {/* BUTTONS */}\n          <Box\n          sx={{\n            display:'flex',\n            alignItems:'center',\n            justifyContent:'center',\n            flexDirection: 'column',\n          }}>\n            <Button\n              fullWidth\n              type=\"submit\"\n              sx={{\n                m: \"2rem 0\",\n                width: '430px', left: '80px' , \n                p: \"1rem\",\n                backgroundColor: '#F2994A',\n                \"&:hover\": { backgroundColor: '#105B27' },\n                color: '#FFF',\n                textAlign: 'center',\n                fontFamily: 'Quicksand',\n                textTransform: 'none',\n                fontSize: '22px',\n                fontWeight: '600',\n                lineHeight: '20.94px', /* 174.811% */\n                letterSpacing: '-0.274px',\n              }}\n            >\n              {isLogin ? \"Log in\" : \"Register Now\"}\n            </Button>\n            <Typography\n              onClick={() => {\n                setPageType(isLogin ? \"register\" : \"login\");\n                resetForm();\n              }}\n              sx={{\n                marginLeft: '80px',\n                color: '#20B64D',\n                \"&:hover\": {\n                  cursor: \"pointer\",\n                  color: '#105B27',\n                },\n              }}\n            >\n              {isLogin\n                ? \"Don't have an account? Sign Up here.\"\n                : \"Already have an account? Login here.\"}\n            </Typography>\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nexport default Form;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
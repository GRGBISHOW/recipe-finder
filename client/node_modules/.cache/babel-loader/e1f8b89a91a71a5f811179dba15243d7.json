{"ast":null,"code":"var _jsxFileName = \"/Users/bishowgurung/recipe-finder/client/src/scenes/recipePage/index.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setLikes, setSortedRecipes, setRecipes, setSelectedRecipes } from \"state\";\nimport { Box, Typography } from \"@mui/material\";\nimport LowerBar from \"scenes/lowerBar\";\nimport Ingredients from \"scenes/ingredientPage\";\nimport Flex from \"components/Flex\";\nimport Image from \"components/ImageWrapper\";\nimport { IconButton } from \"@mui/material\";\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Recipes = () => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [isIngredient, setRecipeToIngredient] = useState(false);\n  const [theIngredientList, setIngredient] = useState([]);\n  const recipes = useSelector(state => state.recipes);\n  //   const selectedRecipes = useSelector((state) => state.selectedRecipes);\n  const getUser = useSelector(state => state.user);\n  const likes = useSelector(state => state.likes);\n  const sortedRecipes = useSelector(state => state.sortedRecipes);\n  const [forceUpdate, setForceUpdate] = useState(false);\n  const getAllRecipes = async () => {\n    const response = await fetch(\"localhost:3000/recipes/\", {\n      method: \"GET\"\n    });\n    const data = await response.json();\n    dispatch(setRecipes({\n      recipes: data\n    }));\n  };\n  function stableSort(arr, compareFn) {\n    if (arr.length <= 1) {\n      return arr.slice();\n    }\n    const middle = Math.floor(arr.length / 2);\n    const left = arr.slice(0, middle);\n    const right = arr.slice(middle);\n    return merge(stableSort(left, compareFn), stableSort(right, compareFn), compareFn);\n  }\n  function merge(left, right, compareFn) {\n    const result = [];\n    let leftIndex = 0;\n    let rightIndex = 0;\n    while (leftIndex < left.length && rightIndex < right.length) {\n      const comparison = compareFn(left[leftIndex], right[rightIndex]);\n      if (comparison <= 0) {\n        result.push(left[leftIndex]);\n        leftIndex++;\n      } else {\n        result.push(right[rightIndex]);\n        rightIndex++;\n      }\n    }\n    // Append remaining elements from left and right arrays\n    return result.concat(left.slice(leftIndex), right.slice(rightIndex));\n  }\n  useEffect(() => {\n    getAllRecipes();\n    const sorted = stableSort([...recipes], (a, b) => b.numLikes - a.numLikes);\n    dispatch(setSortedRecipes({\n      sortedRecipes: sorted\n    }));\n    if (forceUpdate) {\n      setForceUpdate(false);\n    }\n  }, [forceUpdate]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  try {\n    const handleLikeButton = async recipeName => {\n      const sanitizedIngredientName = recipeName.replace(/\"/g, '');\n      if (!likes.includes(recipeName)) {\n        const response = await fetch(\"localhost:3000/recipes/addLike/\", {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Cache-Control\": \"no-store\"\n          },\n          body: JSON.stringify({\n            user: getUser.email,\n            recipe: sanitizedIngredientName\n          })\n        });\n        const data = await response.json();\n        dispatch(setLikes({\n          likes: data,\n          user: getUser,\n          token: getUser._id\n        }));\n      } else {\n        const sanitizedIngredientName = recipeName.replace(/\"/g, '');\n        const counterResponse = await fetch(\"localhost:3000/recipes/removeLike/\", {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            user: getUser.email,\n            recipe: sanitizedIngredientName\n          })\n        });\n        const data = await counterResponse.json();\n        dispatch(setLikes({\n          likes: data,\n          user: getUser,\n          token: getUser._id\n        }));\n      }\n      setForceUpdate(true);\n    };\n\n    // const handleStarButton = async (numOfStars, recipeName) => {\n    //   const sanitizedName = numOfStars.replace(/\"/g, '');\n    //     if(!starTouched){\n    //         const response = await fetch(\"http://localhost:3000/recipes/addStar/\", {\n    //             method: \"PATCH\",\n    //             headers: {\n    //                 \"Content-Type\": \"application/json\",\n    //                 \"Cache-Control\": \"no-store\",\n    //             },\n    //             body: JSON.stringify({ recipe: recipeName, numStar: sanitizedName, user:getUser.email }),\n    //         });\n    //         // const data = await response.json();\n    //     }\n    //     else{\n    //         const sanitizedName = recipeName.replace(/\"/g, '');\n    //         const counterResponse = await fetch(\"http://localhost:3000/recipes/removeStar/\", {\n    //             method: \"PATCH\",\n    //             headers: {\n    //                 \"Content-Type\": \"application/json\",\n    //             },\n    //             body: JSON.stringify({ recipe: recipeName, numStar: sanitizedName, user:getUser.email }),\n    //         });\n    //         // const data = await counterResponse.json();\n    //     }\n    // };\n\n    //   const getRecipesByIngredient = async (ingredientName) => {\n    //     const sanitizedIngredientName = ingredientName.replace(/\"/g, '');\n    //     const response = await fetch(`http://localhost:3000/recipes/${sanitizedIngredientName}`, {\n    //       method: \"POST\",\n    //       headers:{\n    //         \"Content-Type\": \"application/json\",\n    //       },\n    //       body: JSON.stringify({ingredientName: sanitizedIngredientName}),\n    //     });\n    //     const data = await response.json();\n    //     dispatch(setSelectedRecipes({ selectedRecipes: data }));\n    //   };\n\n    const getRecipesByIngredientManual = ingredientName => {\n      const sanitizedIngredientName = ingredientName.replace(/\"/g, '');\n      let currentRecipes = [];\n      for (const rr in recipes) {\n        for (const ll in recipes[rr].ingredientList) if (recipes[rr].ingredientList[ll] === sanitizedIngredientName) {\n          currentRecipes.push(recipes[rr]);\n        }\n      }\n      return currentRecipes;\n    };\n    const recipeFinderFromIngredientStyles = {\n      margin: '3%',\n      padding: '3%',\n      minWidth: '100%',\n      backgroundColor: '#d6e6d5',\n      justifyContent: 'center',\n      display: 'flex',\n      flexDirection: 'column'\n    };\n    const recipeStyle = {\n      padding: '0 2% 0 2%',\n      backgroundColor: '#d6e6d5',\n      display: 'flex',\n      borderTop: '1px solid black'\n    };\n    const descriptionStyle = {\n      padding: \"4% 2% 4% 2%\",\n      fontFamily: 'sans-serif',\n      lineHeight: '250%'\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(LowerBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: '100%',\n          display: 'flex',\n          flexWrap: 'wrap',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: '#E9F8EE',\n          borderRadius: '30px'\n        },\n        children: !isIngredient ? sortedRecipes.map(rr => /*#__PURE__*/_jsxDEV(Box, {\n          style: {\n            width: '400px',\n            padding: '1% 0 1% 0'\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            style: {\n              display: 'flex',\n              height: '92%',\n              backgroundColor: 'white',\n              margin: '30px',\n              borderRadius: '30px',\n              flexDirection: 'column'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              onClick: () => {\n                dispatch(setSelectedRecipes({\n                  selectedRecipes: rr\n                }));\n                navigate(`/recipes/${rr.recipeName}`);\n              },\n              sx: {\n                '&:hover': {\n                  cursor: 'pointer'\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `http://localhost:3000/assets/${rr.imagePath}`,\n                width: '100%',\n                height: '250px',\n                style: {\n                  borderTopLeftRadius: '30px',\n                  borderTopRightRadius: '30px',\n                  zIndex: '1'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                padding: '5%',\n                display: 'flex',\n                justifyContent: 'space-around',\n                Typography: {\n                  fontFamily: 'Quicksand',\n                  fontSize: '14px'\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  sx: {\n                    fontFamily: 'Quicksand',\n                    fontSize: '21px',\n                    fontStyle: 'normal',\n                    fontWeight: '700',\n                    minWidth: '270px',\n                    lineHeight: '139%' /* 38.92px */\n                  },\n                  children: rr.recipeName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  sx: {\n                    fontFamily: 'Quicksand',\n                    fontSize: '18px',\n                    fontStyle: 'normal',\n                    fontWeight: '400',\n                    minWidth: '270px',\n                    lineHeight: '139%' /* 38.92px */\n                  },\n                  children: [rr.cookingTime, \" Min.\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 19\n              }, this), likes.includes(rr.recipeName) ? /*#__PURE__*/_jsxDEV(Box, {\n                onClick: () => {\n                  handleLikeButton(rr.recipeName);\n                },\n                sx: {\n                  alignSelf: 'center',\n                  minWidth: '40px',\n                  height: '40px',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  backgroundColor: 'rgba(242, 153, 74,1)',\n                  borderRadius: '50%',\n                  '&:hover': {\n                    cursor: 'pointer',\n                    backgroundColor: '#E9F8EE'\n                  }\n                },\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  width: \"32px\",\n                  src: \"https://onlygunicorn.xyz/assets/Heart.svg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(Box, {\n                onClick: () => {\n                  handleLikeButton(rr.recipeName);\n                },\n                sx: {\n                  alignSelf: 'center',\n                  minWidth: '40px',\n                  height: '40px',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  borderRadius: '50%',\n                  '&:hover': {\n                    cursor: 'pointer',\n                    backgroundColor: 'rgba(242, 153, 74,1)'\n                  }\n                },\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  width: \"32px\",\n                  src: \"https://onlygunicorn.xyz/assets/Heart.svg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)\n        }, rr._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this)) : /*#__PURE__*/_jsxDEV(Flex, {\n          sx: {\n            flexDirection: 'column',\n            padding: '3%',\n            justifyContent: 'center',\n            backgroundColor: '#FFFFFF'\n          },\n          onClick: () => {\n            setRecipeToIngredient(!isIngredient);\n          },\n          children: isIngredient && theIngredientList.map(currentIngredient => {\n            const currentRecipes = getRecipesByIngredientManual(currentIngredient);\n            return /*#__PURE__*/_jsxDEV(Flex, {\n              sx: {\n                flexDirection: 'column',\n                padding: '3%',\n                justifyContent: 'center',\n                backgroundColor: '#FFFFFF'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Ingredients, {\n                ingredientN: JSON.stringify(currentIngredient),\n                size: '70%',\n                title: currentIngredient\n              }, Math.random(), false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: recipeFinderFromIngredientStyles,\n                children: currentRecipes.map(rr => rr => /*#__PURE__*/_jsxDEV(Box, {\n                  style: {\n                    width: '400px',\n                    padding: '1% 0 1% 0'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    style: {\n                      display: 'flex',\n                      height: '92%',\n                      backgroundColor: 'white',\n                      margin: '30px',\n                      borderRadius: '30px',\n                      flexDirection: 'column'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      onClick: () => {\n                        dispatch(setSelectedRecipes({\n                          selectedRecipes: rr\n                        }));\n                        navigate(`/recipes/${rr.recipeName}`);\n                      },\n                      sx: {\n                        '&:hover': {\n                          cursor: 'pointer'\n                        }\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: `http://localhost:3000/assets/${rr.imagePath}`,\n                        width: '100%',\n                        height: '250px',\n                        style: {\n                          borderTopLeftRadius: '30px',\n                          borderTopRightRadius: '30px',\n                          zIndex: '1'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 320,\n                        columnNumber: 43\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 312,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        padding: '5%',\n                        display: 'flex',\n                        justifyContent: 'space-around',\n                        Typography: {\n                          fontFamily: 'Quicksand',\n                          fontSize: '14px'\n                        }\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Box, {\n                        children: [/*#__PURE__*/_jsxDEV(Typography, {\n                          sx: {\n                            fontFamily: 'Quicksand',\n                            fontSize: '21px',\n                            fontStyle: 'normal',\n                            fontWeight: '700',\n                            minWidth: '270px',\n                            lineHeight: '139%' /* 38.92px */\n                          },\n                          children: rr.recipeName\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 335,\n                          columnNumber: 43\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          sx: {\n                            fontFamily: 'Quicksand',\n                            fontSize: '18px',\n                            fontStyle: 'normal',\n                            fontWeight: '400',\n                            minWidth: '270px',\n                            lineHeight: '139%' /* 38.92px */\n                          },\n                          children: [rr.cookingTime, \" Min.\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 346,\n                          columnNumber: 43\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 334,\n                        columnNumber: 43\n                      }, this), likes.includes(rr.recipeName) ? /*#__PURE__*/_jsxDEV(Box, {\n                        onClick: () => {\n                          handleLikeButton(rr.recipeName);\n                        },\n                        sx: {\n                          alignSelf: 'center',\n                          minWidth: '40px',\n                          height: '40px',\n                          display: 'flex',\n                          alignItems: 'center',\n                          justifyContent: 'center',\n                          backgroundColor: 'rgba(242, 153, 74,1)',\n                          borderRadius: '50%',\n                          '&:hover': {\n                            cursor: 'pointer',\n                            backgroundColor: '#E9F8EE'\n                          }\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"img\", {\n                          width: \"32px\",\n                          src: \"https://onlygunicorn.xyz/assets/Heart.svg\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 376,\n                          columnNumber: 43\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 360,\n                        columnNumber: 43\n                      }, this) : /*#__PURE__*/_jsxDEV(Box, {\n                        onClick: () => {\n                          handleLikeButton(rr.recipeName);\n                        },\n                        sx: {\n                          alignSelf: 'center',\n                          minWidth: '40px',\n                          height: '40px',\n                          display: 'flex',\n                          alignItems: 'center',\n                          justifyContent: 'center',\n                          borderRadius: '50%',\n                          '&:hover': {\n                            cursor: 'pointer',\n                            backgroundColor: 'rgba(242, 153, 74,1)'\n                          }\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"img\", {\n                          width: \"32px\",\n                          src: \"https://onlygunicorn.xyz/assets/Heart.svg\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 394,\n                          columnNumber: 45\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 379,\n                        columnNumber: 41\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 323,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 37\n                  }, this)\n                }, rr._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 37\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 29\n              }, this)]\n            }, Math.random(), true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } catch (err) {\n    console.log(err);\n  }\n};\n_s(Recipes, \"t9h/4wI41q8rLGAXn43pSU8Ol2I=\", false, function () {\n  return [useNavigate, useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n_c = Recipes;\nexport default Recipes;\nvar _c;\n$RefreshReg$(_c, \"Recipes\");","map":{"version":3,"names":["useEffect","useState","useDispatch","useSelector","setLikes","setSortedRecipes","setRecipes","setSelectedRecipes","Box","Typography","LowerBar","Ingredients","Flex","Image","IconButton","FavoriteIcon","FavoriteBorderIcon","useNavigate","Recipes","navigate","dispatch","isIngredient","setRecipeToIngredient","theIngredientList","setIngredient","recipes","state","getUser","user","likes","sortedRecipes","forceUpdate","setForceUpdate","getAllRecipes","response","fetch","method","data","json","stableSort","arr","compareFn","length","slice","middle","Math","floor","left","right","merge","result","leftIndex","rightIndex","comparison","push","concat","sorted","a","b","numLikes","handleLikeButton","recipeName","sanitizedIngredientName","replace","includes","headers","body","JSON","stringify","email","recipe","token","_id","counterResponse","getRecipesByIngredientManual","ingredientName","currentRecipes","rr","ll","ingredientList","recipeFinderFromIngredientStyles","margin","padding","minWidth","backgroundColor","justifyContent","display","flexDirection","recipeStyle","borderTop","descriptionStyle","fontFamily","lineHeight","width","flexWrap","alignItems","borderRadius","map","height","selectedRecipes","cursor","imagePath","borderTopLeftRadius","borderTopRightRadius","zIndex","fontSize","fontStyle","fontWeight","cookingTime","alignSelf","currentIngredient","random","err","console","log"],"sources":["/Users/bishowgurung/recipe-finder/client/src/scenes/recipePage/index.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setLikes, setSortedRecipes, setRecipes, setSelectedRecipes } from \"state\";\r\nimport { Box, Typography } from \"@mui/material\";\r\nimport LowerBar from \"scenes/lowerBar\";\r\nimport Ingredients from \"scenes/ingredientPage\";\r\nimport Flex from \"components/Flex\";\r\nimport Image from \"components/ImageWrapper\";\r\nimport {IconButton} from \"@mui/material\";\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Recipes = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [isIngredient, setRecipeToIngredient] = useState(false);\r\n  const [theIngredientList, setIngredient] = useState([]);\r\n  const recipes = useSelector((state) => state.recipes);\r\n//   const selectedRecipes = useSelector((state) => state.selectedRecipes);\r\n  const getUser = useSelector((state) => state.user);\r\n  const likes = useSelector((state) => state.likes);\r\n  const sortedRecipes = useSelector((state) => state.sortedRecipes);  \r\n  const [forceUpdate, setForceUpdate] = useState(false);\r\n  \r\n  const getAllRecipes = async () => {\r\n    const response = await fetch(\"localhost:3000/recipes/\", {\r\n      method: \"GET\",\r\n    });\r\n    const data = await response.json();\r\n    dispatch(setRecipes({ recipes: data }));\r\n  };\r\n\r\n\r\n\r\n  function stableSort(arr, compareFn) {\r\n    if (arr.length <= 1) {\r\n      return arr.slice();\r\n    }\r\n  \r\n    const middle = Math.floor(arr.length / 2);\r\n    const left = arr.slice(0, middle);\r\n    const right = arr.slice(middle);\r\n  \r\n    return merge(stableSort(left, compareFn), stableSort(right, compareFn), compareFn);\r\n  }\r\n  \r\n  function merge(left, right, compareFn) {\r\n    const result = [];\r\n    let leftIndex = 0;\r\n    let rightIndex = 0;\r\n  \r\n    while (leftIndex < left.length && rightIndex < right.length) {\r\n      const comparison = compareFn(left[leftIndex], right[rightIndex]);\r\n  \r\n      if (comparison <= 0) {\r\n        result.push(left[leftIndex]);\r\n        leftIndex++;\r\n      } else {\r\n        result.push(right[rightIndex]);\r\n        rightIndex++;\r\n      }\r\n    }\r\n  // Append remaining elements from left and right arrays\r\n  return result.concat(left.slice(leftIndex), right.slice(rightIndex));\r\n}\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    getAllRecipes();\r\n    const sorted = stableSort([...recipes], (a, b) => b.numLikes - a.numLikes);\r\n    dispatch(setSortedRecipes({ sortedRecipes : sorted }));\r\n    if (forceUpdate) {\r\n      setForceUpdate(false);\r\n    }\r\n  }, [forceUpdate]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\r\n  try{\r\n\r\n\r\n  const handleLikeButton = async (recipeName) => {\r\n    const sanitizedIngredientName = recipeName.replace(/\"/g, '');\r\n\r\n        if(!likes.includes(recipeName)){\r\n            const response = await fetch(\"localhost:3000/recipes/addLike/\", {\r\n                method: \"PATCH\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Cache-Control\": \"no-store\",\r\n                },\r\n                body: JSON.stringify({ user: getUser.email, recipe: sanitizedIngredientName}),\r\n            });\r\n            const data = await response.json();\r\n            dispatch(setLikes({ likes: data, user: getUser, token: getUser._id }));\r\n        }\r\n        else{\r\n            const sanitizedIngredientName = recipeName.replace(/\"/g, '');\r\n\r\n            const counterResponse = await fetch(\"localhost:3000/recipes/removeLike/\", {\r\n                method: \"PATCH\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({ user: getUser.email, recipe: sanitizedIngredientName}),\r\n            });\r\n            const data = await counterResponse.json();\r\n            dispatch(setLikes({ likes: data, user: getUser, token: getUser._id }));\r\n        }\r\n        setForceUpdate(true);\r\n  };\r\n\r\n  // const handleStarButton = async (numOfStars, recipeName) => {\r\n  //   const sanitizedName = numOfStars.replace(/\"/g, '');\r\n  //     if(!starTouched){\r\n  //         const response = await fetch(\"http://localhost:3000/recipes/addStar/\", {\r\n  //             method: \"PATCH\",\r\n  //             headers: {\r\n  //                 \"Content-Type\": \"application/json\",\r\n  //                 \"Cache-Control\": \"no-store\",\r\n  //             },\r\n  //             body: JSON.stringify({ recipe: recipeName, numStar: sanitizedName, user:getUser.email }),\r\n  //         });\r\n  //         // const data = await response.json();\r\n  //     }\r\n  //     else{\r\n  //         const sanitizedName = recipeName.replace(/\"/g, '');\r\n  //         const counterResponse = await fetch(\"http://localhost:3000/recipes/removeStar/\", {\r\n  //             method: \"PATCH\",\r\n  //             headers: {\r\n  //                 \"Content-Type\": \"application/json\",\r\n  //             },\r\n  //             body: JSON.stringify({ recipe: recipeName, numStar: sanitizedName, user:getUser.email }),\r\n  //         });\r\n  //         // const data = await counterResponse.json();\r\n  //     }\r\n  // };\r\n\r\n//   const getRecipesByIngredient = async (ingredientName) => {\r\n//     const sanitizedIngredientName = ingredientName.replace(/\"/g, '');\r\n//     const response = await fetch(`http://localhost:3000/recipes/${sanitizedIngredientName}`, {\r\n//       method: \"POST\",\r\n//       headers:{\r\n//         \"Content-Type\": \"application/json\",\r\n//       },\r\n//       body: JSON.stringify({ingredientName: sanitizedIngredientName}),\r\n//     });\r\n//     const data = await response.json();\r\n//     dispatch(setSelectedRecipes({ selectedRecipes: data }));\r\n//   };\r\n\r\n  const getRecipesByIngredientManual = (ingredientName) => {\r\n    const sanitizedIngredientName = ingredientName.replace(/\"/g, '');\r\n    let currentRecipes = [];\r\n    for(const rr in recipes){   \r\n        for(const ll in recipes[rr].ingredientList)\r\n        if(recipes[rr].ingredientList[ll] === sanitizedIngredientName){\r\n            currentRecipes.push(recipes[rr]);\r\n        }\r\n    }\r\n    return currentRecipes;\r\n  };\r\n\r\n  \r\n\r\n  const recipeFinderFromIngredientStyles = { \r\n    margin: '3%' , \r\n    padding: '3%' , \r\n    minWidth: '100%' ,\r\n    backgroundColor:'#d6e6d5',\r\n    justifyContent: 'center',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n };\r\n\r\n   const recipeStyle ={\r\n        padding: '0 2% 0 2%',\r\n        backgroundColor:'#d6e6d5',\r\n        display: 'flex',\r\n        borderTop: '1px solid black',  \r\n  };\r\n\r\n  const descriptionStyle = {\r\n        padding: \"4% 2% 4% 2%\",\r\n        fontFamily: 'sans-serif',\r\n        lineHeight: '250%',\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <LowerBar />\r\n        <Box\r\n              sx={{\r\n                width: '100%',\r\n                display: 'flex',\r\n                flexWrap:'wrap',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                backgroundColor: '#E9F8EE',\r\n                borderRadius: '30px',\r\n              }}\r\n            >\r\n      {!isIngredient ? (sortedRecipes.map(\r\n        (rr) => (\r\n            <Box key={rr._id} style={{width:'400px',padding:'1% 0 1% 0'}} >\r\n            <Box style={{ display:'flex', height:'92%' ,backgroundColor:'white',margin:'30px', borderRadius:'30px', flexDirection:'column'}}>\r\n                <Box\r\n                onClick={() => {dispatch(setSelectedRecipes({selectedRecipes : rr}));navigate(`/recipes/${rr.recipeName}`)}}\r\n                 sx={{\r\n                  '&:hover':{\r\n                    cursor: 'pointer',\r\n                  }\r\n                }}\r\n                >\r\n                  <img                                         \r\n                    src={`http://localhost:3000/assets/${rr.imagePath}`} width={'100%'} height={'250px'} style={{ borderTopLeftRadius: '30px',borderTopRightRadius:'30px' , zIndex:'1'}} />                                                                                 \r\n                </Box>                                        \r\n                <Box\r\n                  sx={{\r\n                    padding: '5%',\r\n                    display: 'flex',\r\n                    justifyContent:'space-around',\r\n                    Typography:{\r\n                      fontFamily: 'Quicksand',\r\n                      fontSize: '14px',\r\n                    }\r\n                  }}\r\n                >\r\n                  <Box>\r\n                  <Typography\r\n                  sx={{\r\n                      fontFamily: 'Quicksand',\r\n                      fontSize: '21px',\r\n                      fontStyle: 'normal',\r\n                      fontWeight: '700',\r\n                      minWidth:'270px',\r\n                      lineHeight: '139%'/* 38.92px */,\r\n                  }}>\r\n                    {rr.recipeName}\r\n                  </Typography> \r\n                  <Typography\r\n                  sx={{\r\n                    fontFamily: 'Quicksand',\r\n                    fontSize: '18px',\r\n                    fontStyle: 'normal',\r\n                    fontWeight: '400',\r\n                    minWidth:'270px',\r\n                    lineHeight: '139%'/* 38.92px */,\r\n                  }}\r\n                  >\r\n                    {rr.cookingTime} Min.\r\n                  </Typography> \r\n                  </Box>\r\n                  {(likes.includes(rr.recipeName)) ? (                                               \r\n                  <Box\r\n                  onClick={() => {handleLikeButton(rr.recipeName);}}\r\n                  sx={{\r\n                    alignSelf:'center',\r\n                    minWidth:'40px',\r\n                    height: '40px',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    backgroundColor:'rgba(242, 153, 74,1)',\r\n                    borderRadius: '50%',\r\n                    '&:hover':{\r\n                      cursor:'pointer',\r\n                      backgroundColor:'#E9F8EE',\r\n                    },\r\n                  }}>\r\n                  <img width='32px' src='https://onlygunicorn.xyz/assets/Heart.svg' />                                                                             \r\n                </Box>\r\n                ):(\r\n                <Box\r\n                  onClick={() => {handleLikeButton(rr.recipeName);}}\r\n                  sx={{\r\n                    alignSelf:'center',\r\n                    minWidth:'40px',\r\n                    height: '40px',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    borderRadius: '50%',\r\n                    '&:hover':{\r\n                      cursor:'pointer',\r\n                      backgroundColor:'rgba(242, 153, 74,1)',\r\n                    },\r\n                  }}>\r\n                    <img width='32px' src='https://onlygunicorn.xyz/assets/Heart.svg' /> \r\n                    </Box>\r\n                  )}                                                                               \r\n                </Box>\r\n            </Box>\r\n            </Box>\r\n          )\r\n      )) : (\r\n        <Flex sx={{ flexDirection: 'column' ,padding: '3%', justifyContent: 'center', backgroundColor:'#FFFFFF'}} onClick={() => {setRecipeToIngredient(!isIngredient)}}>\r\n            { isIngredient &&\r\n                (theIngredientList.map(\r\n                    (currentIngredient) => {\r\n                        const currentRecipes = getRecipesByIngredientManual(currentIngredient);\r\n                        return (\r\n                            <Flex sx={{ flexDirection: 'column' ,padding: '3%', justifyContent: 'center', backgroundColor:'#FFFFFF'}} key={Math.random()}>\r\n                            <Ingredients key={Math.random()} ingredientN={JSON.stringify(currentIngredient)} size={'70%'}  title={currentIngredient} />\r\n                            <Box sx={recipeFinderFromIngredientStyles}>\r\n                            {(currentRecipes.map(\r\n                                (rr) => (\r\n                                  (rr) => (\r\n                                    <Box key={rr._id} style={{width:'400px',padding:'1% 0 1% 0'}} >\r\n                                    <Box style={{ display:'flex', height:'92%' ,backgroundColor:'white',margin:'30px', borderRadius:'30px', flexDirection:'column'}}>\r\n                                        <Box\r\n                                        onClick={() => {dispatch(setSelectedRecipes({selectedRecipes : rr}));navigate(`/recipes/${rr.recipeName}`)}}\r\n                                         sx={{\r\n                                          '&:hover':{\r\n                                            cursor: 'pointer',\r\n                                          }\r\n                                        }}\r\n                                        >\r\n                                          <img                                         \r\n                                            src={`http://localhost:3000/assets/${rr.imagePath}`} width={'100%'} height={'250px'} style={{ borderTopLeftRadius: '30px',borderTopRightRadius:'30px' , zIndex:'1'}} />                                                                                 \r\n                                        </Box>                                        \r\n                                        <Box\r\n                                          sx={{\r\n                                            padding: '5%',\r\n                                            display: 'flex',\r\n                                            justifyContent:'space-around',\r\n                                            Typography:{\r\n                                              fontFamily: 'Quicksand',\r\n                                              fontSize: '14px',\r\n                                            }\r\n                                          }}\r\n                                        >\r\n                                          <Box>\r\n                                          <Typography\r\n                                          sx={{\r\n                                              fontFamily: 'Quicksand',\r\n                                              fontSize: '21px',\r\n                                              fontStyle: 'normal',\r\n                                              fontWeight: '700',\r\n                                              minWidth:'270px',\r\n                                              lineHeight: '139%'/* 38.92px */,\r\n                                          }}>\r\n                                            {rr.recipeName}\r\n                                          </Typography> \r\n                                          <Typography\r\n                                          sx={{\r\n                                            fontFamily: 'Quicksand',\r\n                                            fontSize: '18px',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: '400',\r\n                                            minWidth:'270px',\r\n                                            lineHeight: '139%'/* 38.92px */,\r\n                                          }}\r\n                                          >\r\n                                            {rr.cookingTime} Min.\r\n                                          </Typography> \r\n                                          </Box>\r\n                                          {(likes.includes(rr.recipeName)) ? (                                               \r\n                                          <Box\r\n                                          onClick={() => {handleLikeButton(rr.recipeName);}}\r\n                                          sx={{\r\n                                            alignSelf:'center',\r\n                                            minWidth:'40px',\r\n                                            height: '40px',\r\n                                            display: 'flex',\r\n                                            alignItems: 'center',\r\n                                            justifyContent: 'center',\r\n                                            backgroundColor:'rgba(242, 153, 74,1)',\r\n                                            borderRadius: '50%',\r\n                                            '&:hover':{\r\n                                              cursor:'pointer',\r\n                                              backgroundColor:'#E9F8EE',\r\n                                            },\r\n                                          }}>\r\n                                          <img width='32px' src='https://onlygunicorn.xyz/assets/Heart.svg' />                                                                             \r\n                                        </Box>\r\n                                        ):(\r\n                                        <Box\r\n                                          onClick={() => {handleLikeButton(rr.recipeName);}}\r\n                                          sx={{\r\n                                            alignSelf:'center',\r\n                                            minWidth:'40px',\r\n                                            height: '40px',\r\n                                            display: 'flex',\r\n                                            alignItems: 'center',\r\n                                            justifyContent: 'center',\r\n                                            borderRadius: '50%',\r\n                                            '&:hover':{\r\n                                              cursor:'pointer',\r\n                                              backgroundColor:'rgba(242, 153, 74,1)',\r\n                                            },\r\n                                          }}>\r\n                                            <img width='32px' src='https://onlygunicorn.xyz/assets/Heart.svg' /> \r\n                                            </Box>\r\n                                          )}                                                                               \r\n                                        </Box>\r\n                                    </Box>\r\n                                </Box>\r\n                                  )\r\n                                )\r\n                            ))}\r\n                            </Box>\r\n                        </Flex>\r\n                        );\r\n                    }\r\n                ))\r\n            }\r\n        </Flex>\r\n      )}\r\n      </Box>\r\n    </>\r\n    \r\n  );\r\n}\r\ncatch(err){\r\n    console.log(err);\r\n}\r\n}  \r\n\r\nexport default Recipes;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}